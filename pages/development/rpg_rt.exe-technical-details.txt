====== RPG_RT.exe technical details ======


===== Specifying the command line =====

''RPG_RT.exe [TestPlay | BattleTest] [ShowTitle | HideTitle] [Fullscreen | Window]''


==== [TestPlay | BattleTest] ====
 
There is a test mode of play. If the test is carried out of the game from the publisher, is sent TestPlay parameter. If the test is done battle since the publisher, is sent along with the parameter BattleTest the fourth parameter 1. 


==== [ShowTitle | HideTitle] ====

If you want to display an image on the screen title, is sent ShowTitle parameter. If on the contrary do not want to show any pictures, it sends the parameter HideTitle. 


==== [FullScreen | Window] ====
If you want full screen, will be sent FullScreen. If on the contrary we want a window, will be sent Window. 


===== Sample usage =====

By default the game is released in normal mode, showing the image of full-screen title. To change the behavior of the executable, shows the following examples: 

  RPG_RT.exe TestPlay HideTitle Window

This will begin RPG_RT.exe in test mode of play, without displaying the image of the title and windowed mode. 

  RPG_RT.exe BattleTest ShowTitle fullscreen 1

This will execute the game in test mode of battle, showing the image of full-screen title. 

  RPG_RT.exe Dummy Dummy Window

This execute the game in normal mode, showing the image of the title and window. 


===== Notes =====
 
The parameters ''ShowTitle'' and ''FullScreen'' in fact do not exist for RPG_RT.exe are just //dummy//, what happens is that RPG2000.exe that defines itself by launching the test of the game or the test of battle. 


The fourth parameter ''1'' is sent only to launch RPG_RT.exe with ''BattleTest''. It seems a fixed datum, has not changed at any time. 

Running RPG_RT.exe with BattleTest, RPG_RT.ldb amending temporarily to launch the game and is restored when the performance ends. It just makes a temporary saved as if you give to accept or implement in the database. It also increases the value of 0x05B, although that is not documented in the ldb, yes it is in the LMU, and means the number of times saved, if only to test the game. When you save or save as they were applied that value increased after launching the latest evidence, but to restore the file, which by pressing OK or Apply subsequently increased the times run the test within the LDB. 

In the end RPG_RT.ldb also keeps information from the last test of the game, but then RPG2000.exe not reload the form with such data. WhoopA has properly documented and will be explained in paragraph formatting LDB. That is why in launching the test is not passed any additional parameter for the command line apart from ''BattleTest x x 1'' simply because those data are stored in the LDB.